{"version":3,"sources":["RepoCard.js","App.js","reportWebVitals.js","index.js"],"names":["RepoCard","this","props","image","title","description","zipUrl","githubUrl","Grid","item","xs","xl","Card","CardActionArea","target","href","CardMedia","component","alt","height","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","Component","useStyles","makeStyles","theme","root","flexGrow","mainContainer","marginTop","appBar","textAlign","paper","padding","spacing","palette","text","secondary","App","classes","AppBar","position","Toolbar","className","Container","maxWidth","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UA2CeA,E,uKA9BD,IAAD,EACkDC,KAAKC,MAArDC,EADF,EACEA,MAAOC,EADT,EACSA,MAAOC,EADhB,EACgBA,YAAaC,EAD7B,EAC6BA,OAAQC,EADrC,EACqCA,UAC1C,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAgBC,OAAO,SAASC,KAAOR,EAAvC,UACI,cAACS,EAAA,EAAD,CAAWC,UAAU,MAAMC,IAAMd,EAAQe,OAAO,MACpChB,MAAQA,EACRC,MAAQA,IACpB,eAACgB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKN,UAAU,KAAhD,SACMb,IAEN,cAACiB,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBP,UAAU,IAA5D,SACMZ,UAId,cAACoB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,UAAUV,OAAO,SAASC,KAAOT,EAA5D,sC,GArBDsB,aCHjBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,cAAe,CACXC,UAAW,SAEfC,OAAQ,CACJjB,OAAQ,OACRkB,UAAW,UAEfC,MAAO,CACHC,QAASR,EAAMS,QAAQ,GACvBH,UAAW,SACXb,MAAOO,EAAMU,QAAQC,KAAKC,eA4BnBC,MAxBf,WAEI,IAAMC,EAAUhB,IAEhB,OACI,gCACI,cAACiB,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACI,cAACC,EAAA,EAAD,CAASzB,QAAQ,UAAU0B,UAAWJ,EAAQT,OAA9C,SACI,cAACf,EAAA,EAAD,CAAYE,QAAQ,KAApB,2EAKR,cAAC2B,EAAA,EAAD,CAAWC,SAAS,KAAKF,UAAWJ,EAAQX,cAA5C,SACI,cAAC1B,EAAA,EAAD,CAAM4C,WAAS,EAACZ,QAAS,EAAzB,SACI,cAAC,EAAD,CAAUrC,MAAM,+BAA+BC,MAAM,yBAAyBC,YAAY,gCACtFC,OAAO,gEACPC,UAAU,yDC/BnB8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fa7bcb2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nclass RepoCard extends Component {\r\n\r\n    render() {\r\n        const {image, title, description, zipUrl, githubUrl} = this.props;\r\n        return (\r\n            <Grid item xs={12} xl={3}>\r\n                <Card >\r\n                    <CardActionArea target=\"_blank\" href={ githubUrl }>\r\n                        <CardMedia component=\"img\" alt={ title } height=\"140\"\r\n                                    image={ image }\r\n                                    title={ title } />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                { title }\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                { description }\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\" target=\"_blank\" href={ zipUrl }>\r\n                            Descargar ZIP\r\n                        </Button>\r\n                    </CardActions>\r\n                    </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RepoCard;","import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport RepoCard from './RepoCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    mainContainer: {\r\n        marginTop: '100px',\r\n    },\r\n    appBar: {\r\n        height: '80px',\r\n        textAlign: 'center'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar variant=\"regular\" className={classes.appBar}>\r\n                    <Typography variant=\"h6\" >\r\n                        Proyectos del Laboratorio de Comunicaciones Digital - UNC\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container maxWidth=\"xl\" className={classes.mainContainer}>\r\n                <Grid container spacing={3}>\r\n                    <RepoCard image=\"/static/images/sitio-web.jpg\" title=\"Sitio Web de Proyectos\" description=\"Repositorio de este sitio web\"\r\n                        zipUrl=\"https://github.com/LCD-UNC/lcd-unc.github.io/archive/main.zip\"\r\n                        githubUrl=\"https://github.com/LCD-UNC/lcd-unc.github.io\" />\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}