{"version":3,"sources":["ProjectTab.js","RepoCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","avatarSize","width","spacing","height","marginLeft","paddingBottom","projectDescription","paddingTop","listItemText","paddingLeft","ProjectTab","props","classes","children","value","index","avatarPath","title","description","role","hidden","id","aria-labelledby","Box","p","Grid","container","item","xs","ListItem","divider","disableGutters","className","ListItemAvatar","Avatar","src","ListItemText","Typography","variant","color","component","gutterBottom","RepoCard","this","image","zipUrl","githubUrl","xl","lg","md","sm","Card","CardActionArea","target","href","CardMedia","alt","CardContent","lines","more","less","truncatedEndingComponent","CardActions","Button","size","Component","createTheme","palette","type","primary","main","secondary","root","flexGrow","contentContainer","appBar","textAlign","fabStyle","margin","top","right","bottom","left","position","extendedIcon","marginRight","App","React","useState","setValue","ThemeProvider","AppBar","Toolbar","Tabs","onChange","event","newValue","scrollButtons","Tab","label","Container","maxWidth","Tooltip","aria-label","arrow","Fab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qYAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,MAAOF,EAAMG,QAAQ,IACrBC,OAAQJ,EAAMG,QAAQ,IACtBE,WAAYL,EAAMG,QAAQ,IAE9BG,cAAe,CACXA,cAAe,QAEnBC,mBAAoB,CAChBC,WAAY,OACZF,cAAe,QAEnBG,aAAc,CACVC,YAAa,YA6CNC,MAzCf,SAAoBC,GAChB,IAAMC,EAAUf,IAERgB,EAA2DF,EAA3DE,SAAUC,EAAiDH,EAAjDG,MAAOC,EAA0CJ,EAA1CI,MAAOC,EAAmCL,EAAnCK,WAAYC,EAAuBN,EAAvBM,MAAOC,EAAgBP,EAAhBO,YAEnD,OACI,qBAAKC,KAAK,WAAWC,OAAQN,IAAUC,EAC/BM,GAAE,oCAA+BN,GACjCO,kBAAA,+BAAyCP,GAFjD,SAGKD,IAAUC,GACP,cAACQ,EAAA,EAAD,CAAKC,EAAG,EAAR,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAzB,UACI,eAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACI,eAACC,EAAA,EAAD,CAAUC,SAAS,EAAMC,gBAAgB,EAAMC,UAAWpB,EAAQP,cAAlE,UACI,cAAC4B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,IAAKnB,EAAYgB,UAAWpB,EAAQZ,eAEhD,cAACoC,EAAA,EAAD,CAAcJ,UAAWpB,EAAQJ,aAAjC,SACI,cAAC6B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAAcC,UAAU,IAAvD,SAA4DvB,SAGpE,cAACoB,EAAA,EAAD,CAAYI,cAAY,EAACF,MAAM,cAAcP,UAAWpB,EAAQN,mBAAhE,SACKY,IAEL,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAAcC,UAAU,IAAvD,6BAGH3B,U,uGCIV6B,E,uKAlCD,IAAD,EACkDC,KAAKhC,MAArDiC,EADF,EACEA,MAAO3B,EADT,EACSA,MAAOC,EADhB,EACgBA,YAAa2B,EAD7B,EAC6BA,OAAQC,EADrC,EACqCA,UAC1C,OACI,cAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAgBC,OAAO,SAASC,KAAOR,EAAvC,UACe,KAAVF,GACD,cAACW,EAAA,EAAD,CAAWf,UAAU,MAAMgB,IAAMvC,EAAQd,OAAO,MACpCyC,MAAQA,EACR3B,MAAQA,IACpB,eAACwC,EAAA,EAAD,WACI,cAACpB,EAAA,EAAD,CAAYI,cAAY,EAACH,QAAQ,KAAKE,UAAU,KAAhD,SACMvB,IAEN,cAACoB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAA5D,SACI,cAAC,IAAD,CAAckB,MAAO,EAAGC,KAAK,YAAYC,KAAK,YAAY5B,UAAU,iBACpD6B,yBAA0B,QAD1C,SAEM3C,YAKlB,cAAC4C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQX,OAAO,SAASC,KAAOT,EAA5C,qC,GAzBDoB,aCZjBlE,EAAQmE,YAAY,CACxBC,QAAS,CACPC,KAAM,OACNC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,cAKRzE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyE,KAAM,CACFC,SAAU,GAEdC,iBAAkB,CACdnE,WAAY,SAEhBoE,OAAQ,CACJC,UAAW,UAEfC,SAAU,CACNC,OAAQ/E,EAAMG,QAAQ,GACtB6E,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,SAAU,SAEdC,aAAc,CACVC,YAAatF,EAAMG,QAAQ,QAqHpBoF,MAzGf,WAEI,IATevE,EASTH,EAAUf,IAFL,EAGe0F,IAAMC,SAAS,GAH9B,mBAGJ1E,EAHI,KAGG2E,EAHH,KASX,OACI,8BACI,eAACC,EAAA,EAAD,CAAe3F,MAAQA,EAAvB,UACA,eAAC4F,EAAA,EAAD,CAAQR,SAAS,QAAjB,UACI,cAACS,EAAA,EAAD,CAAStD,QAAQ,UAAUN,UAAWpB,EAAQ+D,OAA9C,SACI,cAACtC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oEAIJ,cAACuD,EAAA,EAAD,CAAM/E,MAAOA,EAAOgF,SAbX,SAACC,EAAOC,GACzBP,EAASO,IAY2C1D,QAAQ,aAC5C2D,cAAc,KADtB,SAII,cAACC,EAAA,EAAD,aAAKC,MAAM,cA7BZpF,EA6BsC,EA5B9C,CACLM,GAAG,wBAAD,OAA0BN,GAC5B,gBAAgB,6BAAhB,OAA8CA,YA8BxC,cAACqF,EAAA,EAAD,CAAWC,SAAS,KAAKrE,UAAWpB,EAAQ8D,iBAA5C,SAkBI,eAAC,EAAD,CAAY5D,MAAOA,EAAOC,MAAO,EAAGC,WAAW,oCAAoCC,MAAM,YAC7EC,YAAY,qnCADxB,UAaQ,cAAC,EAAD,CAAU0B,MAAM,GAAG3B,MAAM,qCAAqCC,YAAY,0TAKtE2B,OAAO,4EACPC,UAAU,2DAEd,cAAC,EAAD,CAAUF,MAAM,wCAAwC3B,MAAM,yBAAyBC,YAAY,ySAK/F2B,OAAO,iFACPC,UAAU,gEAEd,cAAC,EAAD,CAAUF,MAAM,0CAA0C3B,MAAM,+DACpDC,YAAY,oiDAcpB2B,OAAO,wEACPC,UAAU,8DAK1B,cAACwD,EAAA,EAAD,CAASrF,MAAM,wBAAwBsF,aAAW,OAAOC,OAAK,EAA9D,SACI,eAACC,EAAA,EAAD,CAAKnE,QAAQ,WAAWC,MAAM,UAAUgE,aAAW,MAAMvE,UAAWpB,EAAQiE,SAAUvB,KAAK,+BAA3F,UACI,cAAC,IAAD,CAAUtB,UAAWpB,EAAQwE,eADjC,qBCzIDsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1aad328.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport {Box, Grid, ListItem, ListItemAvatar, ListItemText, Avatar, Typography, } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/*\r\n\r\n    ProjectTab Component\r\n\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarSize: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    paddingBottom: {\r\n        paddingBottom: '25px'\r\n    },\r\n    projectDescription: {\r\n        paddingTop: '15px',\r\n        paddingBottom: '30px'\r\n    },\r\n    listItemText: {\r\n        paddingLeft: '30px',\r\n    }\r\n}));\r\n\r\nfunction ProjectTab(props) {\r\n    const classes = useStyles();\r\n\r\n    const { children, value, index, avatarPath, title, description } = props;\r\n\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index}\r\n                id={`scrollable-force-tabpanel-${index}`}\r\n                aria-labelledby={`scrollable-force-tab-${index}`}>\r\n            {value === index && (\r\n                <Box p={2}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <ListItem divider={true} disableGutters={true} className={classes.paddingBottom}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar src={avatarPath} className={classes.avatarSize}></Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText className={classes.listItemText}>\r\n                                    <Typography variant=\"h4\" color=\"textPrimary\" component=\"p\">{title}</Typography>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            <Typography gutterBottom color=\"textPrimary\" className={classes.projectDescription}>\r\n                                {description}\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">Repositories</Typography>\r\n                        </Grid>\r\n                        \r\n                        {children}\r\n                </Grid>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nProjectTab.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ProjectTab;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShowMoreText from \"react-show-more-text\";\r\n\r\n/*\r\n\r\n    RepoCard Component\r\n\r\n    image:          path to static image associated with this repository.\r\n    title:          repository descriptive title.\r\n    description:    long repository description.\r\n    zipUrl:         link to download a branch of this repository.\r\n    githubUrl:      link reference to the repository.\r\n\r\n*/\r\n\r\nclass RepoCard extends Component {\r\n\r\n    render() {\r\n        const {image, title, description, zipUrl, githubUrl} = this.props;\r\n        return (\r\n            <Grid item xs={12} xl={3} lg={3} md={6} sm={6}>\r\n                <Card >\r\n                    <CardActionArea target=\"_blank\" href={ githubUrl }>\r\n                        {image !== \"\" && (\r\n                        <CardMedia component=\"img\" alt={ title } height=\"300\"\r\n                                    image={ image }\r\n                                    title={ title } />)}\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                { title }\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                <ShowMoreText lines={2} more=\"Show more\" less=\"Show less\" className=\"show-more-less\"\r\n                                                truncatedEndingComponent={\" ... \"} >\r\n                                    { description }\r\n                                </ShowMoreText>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button size=\"small\" target=\"_blank\" href={ zipUrl }>\r\n                            Download ZIP\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RepoCard;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container, Fab, Tab, Tabs, ThemeProvider, Tooltip } from '@material-ui/core';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ProjectTab from './ProjectTab';\r\nimport RepoCard from './RepoCard';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n        main: '#BF2633',\r\n    },\r\n    secondary: {\r\n        main: '#D9D166'\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    contentContainer: {\r\n        paddingTop: '120px'\r\n    },\r\n    appBar: {\r\n        textAlign: 'center'\r\n    },\r\n    fabStyle: {\r\n        margin: theme.spacing(1),\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `scrollable-force-tab-${index}`,\r\n      'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\nfunction App() {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ThemeProvider theme={ theme }>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar variant=\"regular\" className={classes.appBar}>\r\n                    <Typography variant=\"h6\" >\r\n                        Digital Communications Laboratory Projects (LCD-UNC)\r\n                    </Typography>\r\n                </Toolbar>\r\n                <Tabs value={value} onChange={handleChange} variant=\"scrollable\"\r\n                        scrollButtons=\"on\">\r\n\r\n                    {/* Add new tabs here ----------------------------------------------- NEW PROJECTS TABS */}\r\n                    <Tab label=\"ContactAR\" {...a11yProps(0)} />\r\n                </Tabs>\r\n            </AppBar>\r\n \r\n            <Container maxWidth=\"xl\" className={classes.contentContainer}>\r\n                {/* ProjectTab with RepositoryCard example\r\n\r\n                    <ProjectTab value={value} index={0}>\r\n                        <Grid container spacing={3}>\r\n                            <RepoCard image=\"\" title=\"Example title 1\" description=\"This is a lazy description\"\r\n                                zipUrl=\"\"\r\n                                githubUrl=\"\" />\r\n\r\n                            <RepoCard image=\"\" title=\"Example title 2\" description=\"This is a lazy description\"\r\n                                zipUrl=\"\"\r\n                                githubUrl=\"\" />\r\n\r\n                        </Grid>\r\n                    </ProjectTab> */}\r\n\r\n                {/* Add new tab content here ----------------------------------------------- NEW PROJECTS TABS */}\r\n\r\n                <ProjectTab value={value} index={0} avatarPath=\"/static/images/logo_contactar.svg\" title=\"ContactAR\" \r\n                            description='The general objective of the project is to research and develop an innovative solution for digital\r\n                                         contact tracing within the context of COVID-19. This solution is based on the use of communication \r\n                                         technologies (GPS, cellular telephony: 2G/3G/4G, WiFi, Bluetooth) currently available in mobile \r\n                                         devices (cell phones). These devices have the ability to record the presence of digital signals emitted \r\n                                         by these technologies in a unique way, and thus estimate the proximity between the devices, and \r\n                                         consequently, between the people who use them. This solution seeks to determine quickly, objectively, \r\n                                         reliably, on a large scale (communities, populations, regions, countries, etc.) and at low cost the contacts \r\n                                         between people diagnosed with COVID-19 (confirmed cases) and people who, through direct or indirect contact \r\n                                         or by sharing common places, may have contracted COVID-19 but are asymptomatic or do not yet present symptoms.\r\n                                         This project was presented by the Digital Communications Laboratory but different laboratories and research groups\r\n                                         from the National University of Córdoba participate actively working.' >\r\n\r\n                        <RepoCard image=\"\" title=\"Feature Selection Scripts and Data\" description='Contains the datasets and \r\n                                    scripts needed to obtain the results provided on the paper \"Feature Selection for Proximity \r\n                                    Estimation in COVID-19 Contact Tracing Apps based on Bluetooth Low Energy (BLE)\" presented in \r\n                                    \"Pervasive and Mobile Computing\" journal in the Special Issue on IoT for Fighting COVID-19'\r\n\r\n                            zipUrl=\"https://github.com/LCD-UNC/contactar_feature_selection/archive/master.zip\"\r\n                            githubUrl=\"https://github.com/LCD-UNC/contactar_feature_selection\" />\r\n\r\n                        <RepoCard image=\"/static/images/logo_contactar_lab.svg\" title=\"Laboratory Android App\" description=\"Android application that can retrieve data \r\n                                    from different communication peripherals available on the device, persist them to a local database and \r\n                                    perform exporting operations in CSV file format to external storage memory. It is intended to use with \r\n                                    debugging and experimental purposes.\"\r\n\r\n                            zipUrl=\"https://github.com/LCD-UNC/contactar_laboratory_android_app/archive/master.zip\"\r\n                            githubUrl=\"https://github.com/LCD-UNC/contactar_laboratory_android_app\" />\r\n\r\n                        <RepoCard image=\"/static/images/logo_contactar_seria.png\" title=\"SERIA: Contact Tracing and Prevention Simulator for COVID-19\" \r\n                                    description=\"A plethora of measures are being combined in the attempt to reduce SARS‑CoV‑2 spread. Due to its sustainability, \r\n                                    contact tracing is one of the most frequently applied interventions worldwide, albeit with mixed results. We evaluate the \r\n                                    performance of digital contact tracing for different infection detection rates and response time delays. We also introduce \r\n                                    and analyze a novel strategy we call contact prevention, which emits high exposure warnings to smartphone users according to \r\n                                    Bluetooth‑based contact counting. We model the effect of both strategies on transmission dynamics in SERIA, an agent‑based \r\n                                    simulation platform that implements population‑dependent statistical distributions. Results show that contact prevention \r\n                                    remains effective in scenarios with high diagnostic/response time delays and low infection detection rates, which greatly \r\n                                    impair the effect of traditional contact tracing strategies. Contact prevention could play a significant role in pandemic \r\n                                    mitigation, especially in developing countries where diagnostic and tracing capabilities are inadequate. Contact prevention \r\n                                    could thus sustainably reduce the propagation of respiratory viruses while relying on available technology, respecting data privacy, \r\n                                    and most importantly, promoting community‑based awareness and social responsibility. Depending on infection detection and app \r\n                                    adoption rates, applying a combination of digital contact tracing and contact prevention could reduce pandemic‑related \r\n                                    mortality by 20–56%.\"\r\n\r\n                            zipUrl=\"https://github.com/LCD-UNC/contactar_seria_simulator/archive/main.zip\"\r\n                            githubUrl=\"https://github.com/LCD-UNC/contactar_seria_simulator\" />\r\n                </ProjectTab>\r\n                \r\n            </Container>\r\n            \r\n            <Tooltip title=\"lcd@fcefyn.unc.edu.ar\" aria-label=\"mail\" arrow>\r\n                <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.fabStyle} href=\"mailto:lcd@fcefyn.unc.edu.ar\">\r\n                    <MailIcon className={classes.extendedIcon} />\r\n                    Mail us\r\n                </Fab>\r\n            </Tooltip>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}